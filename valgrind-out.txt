==1414278== Memcheck, a memory error detector
==1414278== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1414278== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==1414278== Command: ./run
==1414278== Parent PID: 809448
==1414278== 
==1414278== Invalid write of size 8
==1414278==    at 0x109F21: add (leak_detector_c.c:39)
==1414278==    by 0x10A1BF: add_mem_info (leak_detector_c.c:147)
==1414278==    by 0x10A0D9: xcalloc (leak_detector_c.c:116)
==1414278==    by 0x1095C3: direc_search (main.c:105)
==1414278==    by 0x1093F2: main (main.c:69)
==1414278==  Address 0x6c82860 is 272 bytes inside a block of size 280 free'd
==1414278==    at 0x484412F: free (vg_replace_malloc.c:974)
==1414278==    by 0x109FD5: erase (leak_detector_c.c:70)
==1414278==    by 0x10A214: remove_mem_info (leak_detector_c.c:164)
==1414278==    by 0x10A0F7: xfree (leak_detector_c.c:127)
==1414278==    by 0x1096BB: direc_search (main.c:120)
==1414278==    by 0x109323: main (main.c:55)
==1414278==  Block was alloc'd at
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x109E9F: add (leak_detector_c.c:26)
==1414278==    by 0x10A1BF: add_mem_info (leak_detector_c.c:147)
==1414278==    by 0x10A0D9: xcalloc (leak_detector_c.c:116)
==1414278==    by 0x1095C3: direc_search (main.c:105)
==1414278==    by 0x109323: main (main.c:55)
==1414278== 
==1414278== Invalid read of size 8
==1414278==    at 0x109F2F: add (leak_detector_c.c:40)
==1414278==    by 0x10A1BF: add_mem_info (leak_detector_c.c:147)
==1414278==    by 0x10A0D9: xcalloc (leak_detector_c.c:116)
==1414278==    by 0x1095C3: direc_search (main.c:105)
==1414278==    by 0x1093F2: main (main.c:69)
==1414278==  Address 0x6c82860 is 272 bytes inside a block of size 280 free'd
==1414278==    at 0x484412F: free (vg_replace_malloc.c:974)
==1414278==    by 0x109FD5: erase (leak_detector_c.c:70)
==1414278==    by 0x10A214: remove_mem_info (leak_detector_c.c:164)
==1414278==    by 0x10A0F7: xfree (leak_detector_c.c:127)
==1414278==    by 0x1096BB: direc_search (main.c:120)
==1414278==    by 0x109323: main (main.c:55)
==1414278==  Block was alloc'd at
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x109E9F: add (leak_detector_c.c:26)
==1414278==    by 0x10A1BF: add_mem_info (leak_detector_c.c:147)
==1414278==    by 0x10A0D9: xcalloc (leak_detector_c.c:116)
==1414278==    by 0x1095C3: direc_search (main.c:105)
==1414278==    by 0x109323: main (main.c:55)
==1414278== 
==1414278== Conditional jump or move depends on uninitialised value(s)
==1414278==    at 0x10A208: remove_mem_info (leak_detector_c.c:162)
==1414278==    by 0x10A0F7: xfree (leak_detector_c.c:127)
==1414278==    by 0x1094EE: main (main.c:88)
==1414278==  Uninitialised value was created by a heap allocation
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x10A061: xmalloc (leak_detector_c.c:98)
==1414278==    by 0x1097AA: initTrie (main.c:144)
==1414278==    by 0x109719: initDirecTrie (main.c:130)
==1414278==    by 0x1092B9: main (main.c:49)
==1414278== 
==1414278== Conditional jump or move depends on uninitialised value(s)
==1414278==    at 0x48440E5: free (vg_replace_malloc.c:974)
==1414278==    by 0x10A103: xfree (leak_detector_c.c:128)
==1414278==    by 0x1094EE: main (main.c:88)
==1414278==  Uninitialised value was created by a heap allocation
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x10A061: xmalloc (leak_detector_c.c:98)
==1414278==    by 0x1097AA: initTrie (main.c:144)
==1414278==    by 0x109719: initDirecTrie (main.c:130)
==1414278==    by 0x1092B9: main (main.c:49)
==1414278== 
==1414278== 
==1414278== HEAP SUMMARY:
==1414278==     in use at exit: 789 bytes in 4 blocks
==1414278==   total heap usage: 49,014 allocs, 49,010 frees, 32,208,022 bytes allocated
==1414278== 
==1414278== 16 bytes in 1 blocks are definitely lost in loss record 1 of 4
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x492D3DE: strdup (strdup.c:42)
==1414278==    by 0x109D0E: searchHelper (main.c:257)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109C3A: search (main.c:243)
==1414278==    by 0x10969B: direc_search (main.c:117)
==1414278==    by 0x109323: main (main.c:55)
==1414278== 
==1414278== 21 bytes in 1 blocks are definitely lost in loss record 2 of 4
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x492D3DE: strdup (strdup.c:42)
==1414278==    by 0x109D0E: searchHelper (main.c:257)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109D76: searchHelper (main.c:264)
==1414278==    by 0x109C3A: search (main.c:243)
==1414278== 
==1414278== 280 bytes in 1 blocks are still reachable in loss record 3 of 4
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x109E9F: add (leak_detector_c.c:26)
==1414278==    by 0x10A1BF: add_mem_info (leak_detector_c.c:147)
==1414278==    by 0x10A0D9: xcalloc (leak_detector_c.c:116)
==1414278==    by 0x1095C3: direc_search (main.c:105)
==1414278==    by 0x1093F2: main (main.c:69)
==1414278== 
==1414278== 472 bytes in 1 blocks are still reachable in loss record 4 of 4
==1414278==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==1414278==    by 0x4901F8F: __fopen_internal (iofopen.c:65)
==1414278==    by 0x10A268: report_mem_leak (leak_detector_c.c:177)
==1414278==    by 0x48CACC5: __run_exit_handlers (exit.c:111)
==1414278==    by 0x48CAE0F: exit (exit.c:141)
==1414278==    by 0x48B1CD6: (below main) (libc_start_call_main.h:74)
==1414278== 
==1414278== LEAK SUMMARY:
==1414278==    definitely lost: 37 bytes in 2 blocks
==1414278==    indirectly lost: 0 bytes in 0 blocks
==1414278==      possibly lost: 0 bytes in 0 blocks
==1414278==    still reachable: 752 bytes in 2 blocks
==1414278==         suppressed: 0 bytes in 0 blocks
==1414278== 
==1414278== For lists of detected and suppressed errors, rerun with: -s
==1414278== ERROR SUMMARY: 2012 errors from 6 contexts (suppressed: 0 from 0)
